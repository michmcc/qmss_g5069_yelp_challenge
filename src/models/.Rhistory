c <- 4
n <- length(data$V1)
sse.R <- anova(lm(y~x))[[2]][2]
fac.x <- factor(x)
sse.F <- anova(lm(y~fac.x))[[2]][2]
f.calc <- ((sse.R-sse.F)/(c-2))/(sse.F/(n-c))
1-pf(f.calc,c-2,n-c)
f.calc
y <- data$V1
x <- data$V2
c <- 4
n <- length(data$V1)
sse.R <- anova(lm(y~x))[[2]][2]
fac.x <- factor(x)
sse.F <- anova(lm(y~fac.x))[[2]][2]
f.calc <- ((sse.R-sse.F)/(c-2))/(sse.F/(n-c))
1-pf(f.calc,c-2,n-c)
#Q1
dat=read.table('HW4Problem1.txt',header=TRUE)
#Q1
dat=read.table('HW4Problem1.txt',header=TRUE)
dat=read.table('~/Dropbox/CU Fall 2016/GU 4205/Homework 4/HW4Problem1.txt',header=TRUE)
data=read.table('~/Dropbox/CU Fall 2016/GU 4205/Homework 4/HW4Problem1.txt',header=TRUE)
model = lm(y~x,data=data)
plot(data$x,data$y)
abline(lm(y~x,data=data), col="red")
abline(lm(y~x,data=data), col="red") + xlab('test')
plot(data$x,data$y)
abline(lm(y~x,data=data), col="red") + xtitle('test')
plot(data$x,data$y)
abline(lm(y~x,data=data), col="red", xlab = "number of copiers serviced", ylab = "total minutes spent servicing")
plot(data$x,data$y)
abline(lm(y~x,data=data), col="red", xlab = "number of copiers serviced", ylab = "total minutes spent servicing")
data=read.table('~/Dropbox/CU Fall 2016/GU 4205/Homework 4/HW4Problem1.txt',header=TRUE)
model = lm(y~x,data=data)
plot(data$x,data$y)
abline(lm(y~x,data=data), col="red", xlab = "number of copiers serviced", ylab = "total minutes spent servicing")
plot(data$x,data$y)
abline(lm(y~x,data=data), col="red", xlab = "number of copiers serviced", ylab = "total minutes spent servicing")
plot(data$x,data$y, xlab = "number of copiers serviced", ylab = "total minutes spent servicing")
abline(lm(y~x,data=data), col="red")
plot(1:length(data$y),rstudent(m), main='line plot')
model <- lm(y~x,data=data)
plot(1:length(data$y),rstudent(model), main='line plot')
plot(predict(model),rstudent(model), xlab = "predicted values", ylab = "studentized deleted residuals")
plot(data$x,rstudent(model))
library(MASS)
bac.box = boxcox(data$y~data$x)
bac.lambda = bac.box$x[which(bac.box$y==max(bac.box$y))]
bac.lambda
install.packages('pdflatex')
mean(B_w)
mean(B_1)
var(B_w)
var(B_1)
data=read.table('~/Dropbox/CU Fall 2016/GU 4205/Homework 4/HW3Problem3.txt',header=TRUE)
df <- read.csv('~/Dropbox/CU Fall 2016/GU 4205/Homework 5/salary.txt',header=TRUE)
require(ggplot2)
require(stats)
set.seed(0)
index <- sample(1:nrow(df),4965,replace = F)
train.data <- df[-index,]
data <- train.data
test.data <- df[index,]
train.data$edu_bucket[train.data$edu < 6] <- "No Middle School"
train.data$edu_bucket[train.data$edu >= 7] <- "Middle School"
train.data$edu_bucket[train.data$edu >= 9] <- "Some High School"
train.data$edu_bucket[train.data$edu == 12] <- "High School"
train.data$edu_bucket[train.data$edu > 12] <- "Some College"
train.data$edu_bucket[train.data$edu >= 14] <- "Associates"
train.data$edu_bucket[train.data$edu >= 16] <- "Bachelors"
train.data$edu_bucket[train.data$edu >= 17] <- "Graduate"
train.data$edu_bucket <- ordered(train.data$edu_bucket, levels = c("No Middle School", "Middle School", "Some High School"
, "High School", "Some College", "Associates"
, "Bachelors", "Graduate"))
test.data$edu_bucket[test.data$edu < 6] <- "No Middle School"
test.data$edu_bucket[test.data$edu >= 7] <- "Middle School"
test.data$edu_bucket[test.data$edu >= 9] <- "Some High School"
test.data$edu_bucket[test.data$edu == 12] <- "High School"
test.data$edu_bucket[test.data$edu > 12] <- "Some College"
test.data$edu_bucket[test.data$edu >= 14] <- "Associates"
test.data$edu_bucket[test.data$edu >= 16] <- "Bachelors"
test.data$edu_bucket[test.data$edu >= 17] <- "Graduate"
test.data$edu_bucket <- ordered(test.data$edu_bucket, levels = c("No Middle School", "Middle School", "Some High School"
, "High School", "Some College", "Associates"
, "Bachelors", "Graduate"))
model1 <- lm(wage ~ edu+exp+city+reg+race+deg+com,data=train.data)
model2 <- lm(wage ~ edu_bucket+exp+city+reg+race+deg+com,data=train.data)
model3 <- lm(log(wage) ~ edu_bucket+exp+city+reg+race+deg+com,data=train.data)
model4 <- lm(wage ~ . + .^2, data = train.data[,-2])
model5 <- lm(log(wage)~ . + .^2, data = train.data[,-2])
model6 <- lm(log(wage)~ . + edu_bucket^2 + exp*city + exp*reg
+ city*reg + city*race, data = train.data[,-2])
AIC(model1)
AIC(model2)
AIC(model3)
AIC(model4)
AIC(model5)
AIC(model6)
BIC(model1)
BIC(model2)
BIC(model3)
BIC(model4)
BIC(model5)
BIC(model6)
summary(model1)
summary(model2)
summary(model4)
summary(model5)
summary(model6)
?predict.lm
predict(model1, train.data)
mean((predict(model1, test.data) - (test.data$wage))^2)
mean((predict(model2, test.data) - (test.data$wage))^2)
head(test.data)
mean((predict(model2, test.data) - (test.data$wage))^2)
model1 <- lm(wage ~ edu+exp+city+reg+race+deg+com,data=train.data)
model2 <- lm(wage ~ edu_bucket+exp+city+reg+race+deg+com,data=train.data)
model3 <- lm(log(wage) ~ edu_bucket+exp+city+reg+race+deg+com,data=train.data)
model4 <- lm(wage ~ . + .^2, data = train.data[,-2])
model5 <- lm(log(wage)~ . + .^2, data = train.data[,-2])
model6 <- lm(log(wage)~ . + edu_bucket^2 + exp*city + exp*reg
+ city*reg + city*race, data = train.data[,-2])
mean((predict(model2, test.data) - (test.data$wage))^2)
head(test.data)
predict(model2, test.data)
length(predict(model2, test.data))
legth(test.data$wage)
length(test.data$wage)
mean((predict(model2, test.data) - (test.data$wage))^2)
is.na(predict(model2, test.data))
sum(is.na(predict(model2, test.data)))
sum(is.na(predict(model`, test.data)))
sum(is.na(predict(model1, test.data)))
)
s;dlsk)
d;s90e0dsl
()
)
)
`
sum(is.na(predict(model1, test.data)))
train.data$edu_bucket[train.data$edu < 7] <- "No Middle School"
train.data$edu_bucket[train.data$edu >= 7] <- "Middle School"
train.data$edu_bucket[train.data$edu >= 9] <- "Some High School"
train.data$edu_bucket[train.data$edu == 12] <- "High School"
train.data$edu_bucket[train.data$edu > 12] <- "Some College"
train.data$edu_bucket[train.data$edu >= 14] <- "Associates"
train.data$edu_bucket[train.data$edu >= 16] <- "Bachelors"
train.data$edu_bucket[train.data$edu >= 17] <- "Graduate"
train.data$edu_bucket <- ordered(train.data$edu_bucket, levels = c("No Middle School", "Middle School", "Some High School"
, "High School", "Some College", "Associates"
, "Bachelors", "Graduate"))
test.data$edu_bucket[test.data$edu < 7] <- "No Middle School"
test.data$edu_bucket[test.data$edu >= 7] <- "Middle School"
test.data$edu_bucket[test.data$edu >= 9] <- "Some High School"
test.data$edu_bucket[test.data$edu == 12] <- "High School"
test.data$edu_bucket[test.data$edu > 12] <- "Some College"
test.data$edu_bucket[test.data$edu >= 14] <- "Associates"
test.data$edu_bucket[test.data$edu >= 16] <- "Bachelors"
test.data$edu_bucket[test.data$edu >= 17] <- "Graduate"
test.data$edu_bucket <- ordered(test.data$edu_bucket, levels = c("No Middle School", "Middle School", "Some High School"
, "High School", "Some College", "Associates"
, "Bachelors", "Graduate"))
model1 <- lm(wage ~ edu+exp+city+reg+race+deg+com,data=train.data)
model2 <- lm(wage ~ edu_bucket+exp+city+reg+race+deg+com,data=train.data)
model3 <- lm(log(wage) ~ edu_bucket+exp+city+reg+race+deg+com,data=train.data)
model4 <- lm(wage ~ . + .^2, data = train.data[,-2])
model5 <- lm(log(wage)~ . + .^2, data = train.data[,-2])
model6 <- lm(log(wage)~ . + edu_bucket^2 + exp*city + exp*reg
+ city*reg + city*race, data = train.data[,-2])
AIC(model1)
AIC(model2)
AIC(model3)
AIC(model4)
AIC(model5)
AIC(model6)
mean((predict(model1, test.data) - (test.data$wage))^2)
mean((predict(model2, test.data) - (test.data$wage))^2)
mean((predict(model3, test.data) - (test.data$wage))^2)
mean((predict(model4, test.data) - (test.data$wage))^2)
mean((predict(model5, test.data) - (test.data$wage))^2)
mean((predict(model6, test.data) - (test.data$wage))^2)
mean((predict(model6, test.data) - (test.data$wage))^2)
resid(model4)
qplot(test.data$wage, resid(model4))
require(ggplot2)
qplot(test.data$wage, resid(model4))
plot(test.data$wage, resid(model4))
plot(train.data$wage, resid(model4))
qplot(train.data$wage, resid(model4))
qplot(train.data$wage, resid(model4)) + xlab("Wage") + ylab("Resid Wage") + ggtitle("Residual Diagnostic") +
theme(text = element_text(size=22))
qqpline(rstandard(model4))
qqline(rstandard(model4))
qqline(rstandard(model4))
rstandard(model4)
qqline(rstandard(eruption.lm))
p <- ggplot(data, aes(sample = rstandard(model4)))
p + stat_qq()
p
p <- ggplot(aes(sample = rstandard(model4)))
p + stat_qq()
qqline(rstandard(model4))
qqline(rstandard(model4))
plot()
qqline(rstandard(model4))
?qqpline
?qqpline
?qqline
require(graphics)
qqline(rstandard(model4))
?rt
?qqline
qplot(train.data$wage, resid(model4)) + xlab("Wage") + ylab("Resid Wage") + ggtitle("Residual Diagnostic") +
theme(text = element_text(size=22))
qqnorm(rstandard(model4))
qqnorm(rstandard(model4))
qqnorm(rstandard(model4)) + qqpline(rstandard(model4))
qqnorm(rstandard(model4)) + qqline(rstandard(model4))
qqnorm(rstandard(model1)) + qqline(rstandard(model1))
qqnorm(rstandard(model1)) + qqline(rstandard(model1))
qqnorm(rstandard(model4)) + qqline(rstandard(model4))
qqnorm(rstandard(model1)) + qqline(rstandard(model1))
qqnorm(rstandard(model3)) + qqline(rstandard(model3))
summary(model1)
head(data)
levels(race)
table(train.data$race)
summary(model2)
?qqnorm
?qqnorm
install.packages('qualityTools')
require(qualityTools)
qqPlot(rstandard(model4), "log-normal")
summary(model1)
#########################################
df <- read.csv('~/Dropbox/CU Fall 2016/GU 4205/Homework 5/salary.txt',header=TRUE)
require(ggplot2)
require(stats)
#########################################
### Code from Courseworks
#########################################
# Pick training and test data
# Use sample
# Set seed to 0
set.seed(0)
index <- sample(1:nrow(df),4965,replace = F)
train.data <- df[-index,]
data <- train.data
test.data <- df[index,]
#########################################
### Exploratory Data Analysis
#########################################
qplot(df$wage, geom = 'histogram') + xlab("Wage") + ylab("Count") + ggtitle("Histogram of Wage Variable")
# look at distribution of all variables
p_wage <- ggplot(train.data, aes(x = wage)) + geom_histogram(binwidth = 250) +
xlab("Wage") + ylab("Count") + ggtitle("Histogram of Wage Variable") +
theme(text = element_text(size=22))
p_edu <- ggplot(train.data, aes(x = edu)) + geom_histogram(binwidth = 1) +
xlab("Years of Education") + ylab("Count") + ggtitle("Histogram of Edu Variable") +
theme(text = element_text(size=22))
p_exp <- ggplot(train.data, aes(x = exp)) + geom_histogram(binwidth = 2.5) +
xlab("Years of Experience") + ylab("Count") + ggtitle("Histogram of Exp Variable") +
theme(text = element_text(size=22))
p_com <- ggplot(train.data, aes(x = com)) + geom_histogram() +
xlab("Commuting Distance") + ylab("Count") + ggtitle("Histogram of Com Variable") +
theme(text = element_text(size=22))
p_emp <- ggplot(train.data, aes(x = emp)) + geom_histogram() +
xlab("Number of Employees at Company") + ylab("Count") + ggtitle("Histogram of Emp Variable") +
theme(text = element_text(size=22))
p_
# look at distribution of wage variable
ggplot(train.data, aes(x = wage)) + geom_histogram(binwidth = 250) +
xlab("Wage") + ylab("Count") + ggtitle("Histogram of Wage Variable") +
theme(text = element_text(size=22))
# look at distribution of log(wage) variable
ggplot(train.data, aes(x = log(wage))) + geom_histogram() +
xlab("Log(Wage)") + ylab("Count") + ggtitle("Histogram of Log(Wage) Variable") +
theme(text = element_text(size=22))
# Look at wages by race
ggplot(train.data, aes(factor(race), log(wage))) + geom_boxplot(aes(fill = factor(race))) +
labs(fill = "Race") + xlab("Race") + ylab("Log(Wage)") + ggtitle("Race vs. Log(Wage)") +
theme(text = element_text(size=22))
# look at edu variable
ggplot(train.data, aes(factor(edu), log(wage))) + geom_boxplot(aes(fill = factor(edu))) +
labs(fill = "Race") + xlab("Years of Education") + ylab("Log(Wage)") + ggtitle("Education vs. Log(Wage)") +
theme(text = element_text(size=22)) + guides(fill = FALSE)
# recode edu variable
train.data$edu_bucket[train.data$edu < 7] <- "No Middle School"
train.data$edu_bucket[train.data$edu >= 7] <- "Middle School"
train.data$edu_bucket[train.data$edu >= 9] <- "Some High School"
train.data$edu_bucket[train.data$edu == 12] <- "High School"
train.data$edu_bucket[train.data$edu > 12] <- "Some College"
train.data$edu_bucket[train.data$edu >= 14] <- "Associates"
train.data$edu_bucket[train.data$edu >= 16] <- "Bachelors"
train.data$edu_bucket[train.data$edu >= 17] <- "Graduate"
train.data$edu_bucket <- ordered(train.data$edu_bucket, levels = c("No Middle School", "Middle School", "Some High School"
, "High School", "Some College", "Associates"
, "Bachelors", "Graduate"))
test.data$edu_bucket[test.data$edu < 7] <- "No Middle School"
test.data$edu_bucket[test.data$edu >= 7] <- "Middle School"
test.data$edu_bucket[test.data$edu >= 9] <- "Some High School"
test.data$edu_bucket[test.data$edu == 12] <- "High School"
test.data$edu_bucket[test.data$edu > 12] <- "Some College"
test.data$edu_bucket[test.data$edu >= 14] <- "Associates"
test.data$edu_bucket[test.data$edu >= 16] <- "Bachelors"
test.data$edu_bucket[test.data$edu >= 17] <- "Graduate"
test.data$edu_bucket <- ordered(test.data$edu_bucket, levels = c("No Middle School", "Middle School", "Some High School"
, "High School", "Some College", "Associates"
, "Bachelors", "Graduate"))
# look at recoded edu variable
ggplot(train.data, aes(factor(edu_bucket), log(wage))) + geom_boxplot(aes(fill = factor(edu_bucket))) +
labs(fill = "Race") + xlab("Educational Attainment") + ylab("Log(Wage)") + ggtitle("Education vs. Log(Wage)") +
theme(text = element_text(size=18)) ##+ guides(fill = FALSE)
############################
## MODEL BUILDING
############################
model1 <- lm(wage ~ edu+exp+city+reg+race+deg+com,data=train.data)
model2 <- lm(wage ~ edu_bucket+exp+city+reg+race+deg+com,data=train.data)
model3 <- lm(log(wage) ~ edu_bucket+exp+city+reg+race+deg+com,data=train.data)
model4 <- lm(wage ~ . + .^2, data = train.data[,-2])
model5 <- lm(log(wage)~ . + .^2, data = train.data[,-2])
model6 <- lm(log(wage)~ . + edu_bucket^2 + exp*city + exp*reg
+ city*reg + city*race, data = train.data[,-2])
AIC(model1)
AIC(model2)
AIC(model3)
AIC(model4)
AIC(model5)
AIC(model6)
BIC(model1)
BIC(model2)
BIC(model3)
BIC(model4)
BIC(model5)
BIC(model6)
summary(model1)
summary(model2)
summary(model3)
summary(model4)
summary(model5)
summary(model6)
###############################
### MODEL VALIDATION
###############################
# validate model against training set
mean((predict(model1, test.data) - (test.data$wage))^2)
mean((predict(model2, test.data) - (test.data$wage))^2)
mean((predict(model3, test.data) - (test.data$wage))^2)
mean((predict(model4, test.data) - (test.data$wage))^2)
mean((predict(model5, test.data) - (test.data$wage))^2)
mean((predict(model6, test.data) - (test.data$wage))^2)
###############################
### MODEL DIAGNOSTICS
###############################
qplot(train.data$wage, resid(model4)) + xlab("Wage") + ylab("Resid Wage") + ggtitle("Residual Diagnostic") +
theme(text = element_text(size=22))
qqnorm(rstandard(model4)) + qqline(rstandard(model4))
qqnorm(rstandard(model1)) + qqline(rstandard(model1))
install.packages("devtools")
load("GSS.Rdata")
install_github("jgabry/QMSS_package")
require(devtools)
install_github("jgabry/QMSS_package")
load("GSS.Rdata")
load("~Data/GSS.Rdata")
load("~\Data\GSS.Rdata")
load("~/Data/GSS.Rdata")
?fromJSON
??fromJSON
library(jsonlite)
?fromJSON
load("../../data/processed/cpdtm_unstem_bi.RData")
setwd("~/qmss_g5069_yelp_challenge/src/models")
load("../../data/processed/cpdtm_unstem_bi.RData")
k <- 3
output <- LDA(cpdtm_unstem_bi, k, method = "Gibbs")
library(topicmodels)
k <- 3
output <- LDA(cpdtm_unstem_bi, k, method = "Gibbs")
terms(output, 5)
terms(output, 10)
terms(output, 15)
rest_reviews <- read.csv("../../data/processed/us_restaurant_reviews_10.csv", row.names = NULL)
?topicmodels
??topicmodels
class(output)
?load
topics(output)
library(topicmodels)
# load TRAINING unstemmed BIGRAM document term matrix
load("../../data/processed/cpdtm_unstem_bi_train.RData")
# load FULL
load("../../data/processed/cpdtm_unstem_bi.RData")
set.seed(1234)
k <- 3
output <- LDA(cpdtm_unstem_bi_train.RData, k, method = "Gibbs")
output <- LDA(cpdtm_unstem_bi_train, k, method = "Gibbs")
terms(output, 15)
?LDA
full.topics <- posterior(output,cpdtm_unstem_bi)
(full.topics <- apply(full.topics$topics, 1, which.max))
head(full.topics)
str(full.topics)
dim(full.topics)
class(full.topics)
full.topics[,2]
full.topics[1,2]
full.topics[1]
full.topics[2]
full.topics[3]
as.data.frame(full.topics)
full.topics <- as.data.frame(full.topics)
head(full.topics)
str(full.topics)
library(dplyr)
full.topics <- add_rownames(full.topics, "business_review_id")
head(full.topics)
full.topics$business_review_id[1:10]
?strsplit
full.topics$business_review_id[1]
strsplit(full.topics$business_review_id[1], "/")
strsplit(full.topics$business_review_id[1], "/")[1]
strsplit(full.topics$business_review_id[1], "/")[1][1]
strsplit(full.topics$business_review_id[1], "/")[[1]]
strsplit(full.topics$business_review_id[1], "/")[[1]][1]
strsplit(full.topics$business_review_id[1], "/")[[1]][2]
?sapply
full.topics <- posterior(output,cpdtm_unstem_bi)
(full.topics <- apply(full.topics$topics, 1, which.max))
review_topics <- data.frame(business_review_id = rownames(full.topics), full.topics)
head(full.topics)
as.data.frame(business_review_id = rownames(full.topics), full.topics)
review_topics <- as.data.frame(business_review_id = rownames(full.topics), full.topics)
head(review_topics)
data.frame(business_review_id = rownames(review_topics), review_topics)
head(review_topics)
?data.frame
data.frame(business_review_id = rownames(review_topics), review_topics, row.names = NULL)
review_topics <- data.frame(business_review_id = rownames(review_topics), review_topics, row.names = NULL)
head(review_topics)
library(stringr)
str_split_fixed(review_topics$business_review_id, "/")
str_split_fixed(review_topics$business_review_id, "/", 2)
head(str_split_fixed(review_topics$business_review_id, "/", 2))
str_split_fixed(review_topics$business_review_id, "/", 2)[1]
str_split_fixed(review_topics$business_review_id, "/", 2)[,1]
review_topics$business_id <- str_split_fixed(review_topics$business_review_id, "/", 2)[,1]
review_topics$review_id <- str_split_fixed(review_topics$business_review_id, "/", 2)[,2]
review_topics
head(review_topics)
review_topics <- review_topics[, c("business_id", "review_id", "full.topics")]
head(review_topics)
table(review_topics$full.topics)
table(review_topics$business_id, review_topic$full.topics)
table(review_topics$business_id, review_topics$full.topics)
head(table(review_topics$business_id, review_topics$full.topics))
?table
as.data.frame(table(review_topics$business_id, review_topics$full.topics))
head(as.data.frame(table(review_topics$business_id, review_topics$full.topics)))
table(review_topics$business_id, review_topics$full.topics)
head(table(review_topics$business_id, review_topics$full.topics))
head(data.frame(table(review_topics$business_id, review_topics$full.topics)))
head(review_topics)
table(review_topics$business_id)
data.frame(table(review_topics$business_id))
head(data.frame(table(review_topics$business_id)))
?data.frame
as.data.frame(table(review_topics$business_id))
head( as.data.frame(table(review_topics$business_id)))
?as.data.frame
as.data.frame(table(review_topics$business_id), col.names = c("business_id", "review_cnt"))
head( as.data.frame(table(review_topics$business_id), col.names = c("business_id", "review_cnt")))
business_review_cnt <- as.data.frame(table(review_topics$business_id))
head(business_review_cnt)
colnames(business_review_cnt)
business_topic_cnt <- as.data.frame(table(review_topics$business_id, review_topics$full.topics))
head(business_topic_cnt)
business_topic_cnt <- as.data.frame(table(review_topics$business_id, review_topics$full.topics))
colnames(business_topic_cnt) <- c("business_id", "topic", "topic_cnt")
head(business_review_cnt)
colnames(business_review_cnt) <- c("business_id", "review_cnt")
head(business_review_cnt)
head(business_topic_cnt)
table(review_topics$business_id, review_topics$full.topics)
class(table(review_topics$business_id, review_topics$full.topics))
str(table(review_topics$business_id, review_topics$full.topics))
as.data.frame.matrix(table(review_topics$business_id, review_topics$full.topics)
)
head(as.data.frame.matrix(table(review_topics$business_id, review_topics$full.topics)))
colnames(as.data.frame.matrix(table(review_topics$business_id, review_topics$full.topics)))
business_topic_cnt <- as.data.frame.matrix(table(review_topics$business_id, review_topics$full.topics))
colnames(business_topic_cnt)
data.frame(business_id = rownames(business_topic_cnt), business_topic_cnt, row.names = NULL)
head(data.frame(business_id = rownames(business_topic_cnt), business_topic_cnt, row.names = NULL))
business_topic_cnt <- as.data.frame.matrix(table(review_topics$business_id, review_topics$full.topics))
business_topic_cnt <- data.frame(business_id = rownames(business_topic_cnt), business_topic_cnt, row.names = NULL)
head(business_topic_cnt)
colnames(business_topic_cnt) <- c("business_id", "topic_1", "topic_2", "topic_3")
business_topic_cnt
head(business_topic_cnt)
nrow(business_topic_cnt)
nrow(business_review_cnt)
merge(business_review_cnt, business_topic_cnt)
head(merge(business_review_cnt, business_topic_cnt))
business_topics <- merge(business_review_cnt, business_topic_cnt)
nrow(business_topics)
write.csv(business_topics, file = "../../data/processed/business_topics.csv")
terms(output, 15)
business_topics
head(business_topics)
